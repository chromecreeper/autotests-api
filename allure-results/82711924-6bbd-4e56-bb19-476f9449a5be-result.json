{"name": "Create user", "status": "broken", "statusDetails": {"message": "httpx.ConnectError: [Errno 61] Connection refused", "trace": "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n.venv/lib/python3.11/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.11/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n.venv/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py:101: in handle_request\n    raise exc\n.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py:78: in handle_request\n    stream = self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpcore/_sync/connection.py:124: in _connect\n    stream = self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpcore/_backends/sync.py:207: in connect_tcp\n    with map_exceptions(exc_map):\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno 61] Connection refused\n\n.venv/lib/python3.11/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.users.test_users.TestUsers object at 0x103473390>, email = 'mail.ru'\npublic_users_client = <clients.users.public_users_client.PublicUsersClient object at 0x103a8f7d0>\n\n    @pytest.mark.parametrize(\"email\", [\"mail.ru\", \"gmail.com\", \"example.com\"])\n    @allure.tag(AllureTag.CREATE_ENTITY)\n    @allure.story(AllureStory.CREATE_ENTITY)\n    @allure.title(\"Create user\")\n    @allure.severity(Severity.BLOCKER)\n    @allure.sub_suite(AllureStory.CREATE_ENTITY)\n    def test_create_user(self, email: str, public_users_client: PublicUsersClient):\n        request = CreateUserRequestSchema(email=fake.email(domain=email))\n>       response = public_users_client.create_user_api(request)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/users/test_users.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nclients/users/public_users_client.py:20: in create_user_api\n    return self.post(\"/api/v1/users\", json=request.model_dump(by_alias=True))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nclients/api_client.py:37: in post\n    return self.client.post(url, json=json, data=data, files=files)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpx/_client.py:1144: in post\n    return self.request(\n.venv/lib/python3.11/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n.venv/lib/python3.11/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n.venv/lib/python3.11/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.11/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno 61] Connection refused\n\n.venv/lib/python3.11/site-packages/httpx/_transports/default.py:118: ConnectError"}, "parameters": [{"name": "email", "value": "'mail.ru'"}], "start": 1751219673034, "stop": 1751219673052, "uuid": "85504f19-24c1-4b8a-8690-72c282dbb4b6", "historyId": "3aa508babec4cd5049039c360d0540c9", "testCaseId": "0f342f12f889b3471502fbe48e8f59c2", "fullName": "tests.users.test_users.TestUsers#test_create_user", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "REGRESSION"}, {"name": "epic", "value": "LMS service"}, {"name": "tag", "value": "USERS"}, {"name": "story", "value": "Create entity"}, {"name": "feature", "value": "Users"}, {"name": "tag", "value": "CREATE_ENTITY"}, {"name": "subSuite", "value": "Create entity"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "suite", "value": "Users"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "users"}, {"name": "host", "value": "MacBook-Pro-Tochka-2.local"}, {"name": "thread", "value": "88508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.users.test_users"}]}