{"name": "Get file", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined", "trace": "self = <tests.files.test_files.TestFiles object at 0x107555450>, files_client = <clients.files.files_client.FilesClient object at 0x1078a2690>\nfunction_file = FileFixture(request=CreateFileRequestSchema(filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests', up...s/28ab71e3-e845-4d73-9e81-7c579293c646.png'), filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests')))\n\n    @allure.title(\"Get file\")\n    @allure.story(AllureStory.GET_ENTITY)\n    @allure.sub_suite(AllureStory.GET_ENTITY)\n    def test_get_file(self, files_client: FilesClient, function_file: FileFixture):\n        response = files_client.get_file_api(function_file.response.file.id)\n        response_data = GetFileResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n        assert_get_file_response(response_data, function_file.response)\n    \n>       validate_json_schema(response.json(), response_data.model_json_schema())\n\ntests/files/test_files.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ninstance = {'file': {'directory': 'tests', 'filename': '28ab71e3-e845-4d73-9e81-7c579293c646.png', 'id': 'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', 'url': 'http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'}}\nschema = {'$defs': {'FileSchema': {'description': 'Описание структуры файла.', 'properties': {'directory': {'title': 'Directory...структуры запроса получения файла.', 'properties': {'file': {'$ref': '#/$defs/FileSchema'}}, 'required': ['file'], ...}\n\n    @allure.step(\"Validating JSON schema\")\n    def validate_json_schema(instance: Any, schema: dict) -> None:\n        \"\"\"\n        Проверяет, соответствует ли JSON-объект (instance) заданной JSON-схеме (schema).\n    \n        :param instance: JSON-данные, которые нужно проверить.\n        :param schema: Ожидаемая JSON-schema.\n        :raises jsonschema.exceptions.ValidationError: Если instance не соответствует schema.\n        \"\"\"\n        # Логируем факт начала валидации\n        logger.info(\"Validating JSON schema\")\n    \n        validate(\n            schema=schema,\n            instance=instance,\n>           format_checker=Draft202012Validator.FORMAT_CHECKER,\n                           ^^^^^^^^^^^^^^^^^^^^\n        )\nE       NameError: name 'Draft202012Validator' is not defined\n\ntools/assertions/schema.py:25: NameError"}, "steps": [{"name": "Get file by id 'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'", "status": "passed", "steps": [{"name": "Make GET request to '/api/v1/files/c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'", "status": "passed", "attachments": [{"name": "cURL command", "source": "c0a78348-9984-4377-9d30-ccec23d51469-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/files/c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'"}, {"name": "params", "value": "None"}], "start": 1752506426832, "stop": 1752506426845}], "parameters": [{"name": "file_id", "value": "'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'"}], "start": 1752506426832, "stop": 1752506426845}, {"name": "Check that response status code equals to <HTTPStatus.OK: 200>", "status": "passed", "parameters": [{"name": "actual", "value": "200"}, {"name": "expected", "value": "<HTTPStatus.OK: 200>"}], "start": 1752506426845, "stop": 1752506426845}, {"name": "Check get file response", "status": "passed", "steps": [{"name": "Check file", "status": "passed", "steps": [{"name": "Check that 'id' equals to 'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'", "status": "passed", "parameters": [{"name": "actual", "value": "'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'"}, {"name": "expected", "value": "'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec'"}, {"name": "name", "value": "'id'"}], "start": 1752506426846, "stop": 1752506426846}, {"name": "Check that 'url' equals to HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png')", "status": "passed", "parameters": [{"name": "actual", "value": "HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png')"}, {"name": "expected", "value": "HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png')"}, {"name": "name", "value": "'url'"}], "start": 1752506426846, "stop": 1752506426846}, {"name": "Check that 'filename' equals to '28ab71e3-e845-4d73-9e81-7c579293c646.png'", "status": "passed", "parameters": [{"name": "actual", "value": "'28ab71e3-e845-4d73-9e81-7c579293c646.png'"}, {"name": "expected", "value": "'28ab71e3-e845-4d73-9e81-7c579293c646.png'"}, {"name": "name", "value": "'filename'"}], "start": 1752506426846, "stop": 1752506426846}, {"name": "Check that 'directory' equals to 'tests'", "status": "passed", "parameters": [{"name": "actual", "value": "'tests'"}, {"name": "expected", "value": "'tests'"}, {"name": "name", "value": "'directory'"}], "start": 1752506426846, "stop": 1752506426846}], "parameters": [{"name": "actual", "value": "FileSchema(id='c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', url=HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'), filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests')"}, {"name": "expected", "value": "FileSchema(id='c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', url=HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'), filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests')"}], "start": 1752506426846, "stop": 1752506426846}], "parameters": [{"name": "get_file_response", "value": "GetFileResponseSchema(file=FileSchema(id='c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', url=HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'), filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests'))"}, {"name": "create_file_response", "value": "CreateFileResponseSchema(file=FileSchema(id='c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', url=HttpUrl('http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'), filename='28ab71e3-e845-4d73-9e81-7c579293c646.png', directory='tests'))"}], "start": 1752506426845, "stop": 1752506426846}, {"name": "Validating JSON schema", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined\n", "trace": "  File \"/Users/basmakovoleg/my-git-projects/autotests-api/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/basmakovoleg/my-git-projects/autotests-api/tools/assertions/schema.py\", line 25, in validate_json_schema\n    format_checker=Draft202012Validator.FORMAT_CHECKER,\n                   ^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "instance", "value": "{'file': {'id': 'c5e5bb72-2d09-4eb0-a2d5-54b8802caaec', 'filename': '28ab71e3-e845-4d73-9e81-7c579293c646.png', 'directory': 'tests', 'url': 'http://localhost:8000/static/tests/28ab71e3-e845-4d73-9e81-7c579293c646.png'}}"}, {"name": "schema", "value": "{'$defs': {'FileSchema': {'description': 'Описание структуры файла.', 'properties': {'id': {'title': 'Id', 'type': 'string'}, 'url': {'format': 'uri', 'maxLength': 2083, 'minLength': 1, 'title': 'Url', 'type': 'string'}, 'filename': {'title': 'Filename', 'type': 'string'}, 'directory': {'title': 'Directory', 'type': 'string'}}, 'required': ['id', 'url', 'filename', 'directory'], 'title': 'FileSchema', 'type': 'object'}}, 'description': 'Описание структуры запроса получения файла.', 'properties': {'file': {'$ref': '#/$defs/FileSchema'}}, 'required': ['file'], 'title': 'GetFileResponseSchema', 'type': 'object'}"}], "start": 1752506426848, "stop": 1752506426848}], "attachments": [{"name": "log", "source": "ca833b63-bbb0-4cf4-8a4a-c428329e73ca-attachment.txt", "type": "text/plain"}], "start": 1752506426831, "stop": 1752506426848, "uuid": "727075b1-bf7e-425a-90d0-aa21d08a1778", "historyId": "1f2f081549f23079a226c720a14529e0", "testCaseId": "1f2f081549f23079a226c720a14529e0", "fullName": "tests.files.test_files.TestFiles#test_get_file", "labels": [{"name": "tag", "value": "REGRESSION"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "epic", "value": "LMS service"}, {"name": "subSuite", "value": "Get entity"}, {"name": "suite", "value": "Files"}, {"name": "story", "value": "Get entity"}, {"name": "feature", "value": "Files"}, {"name": "tag", "value": "FILES"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "files"}, {"name": "host", "value": "MacBook-Pro-Tochka-2.local"}, {"name": "thread", "value": "20295-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.files.test_files"}]}