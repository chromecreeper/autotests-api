{"name": "Login with correct email and password", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined", "trace": "self = <tests.authentication.test_authentication.TestAuthentication object at 0x107307dd0>\nfunction_user = UserFixture(request=CreateUserRequestSchema(email='graykathryn@example.net', password='h4SNucOd#&', last_name='Adams',...2a-af6c-18cb47fe765c', email='graykathryn@example.net', last_name='Adams', first_name='Sheila', middle_name='Teresa')))\npublic_users_client = <clients.users.public_users_client.PublicUsersClient object at 0x107638e90>\nauthentication_client = <clients.authentication.authentication_client.AuthenticationClient object at 0x107652010>\n\n    @allure.story(AllureStory.LOGIN)  # Добавили story\n    @allure.title(\"Login with correct email and password\")\n    @allure.sub_suite(AllureStory.LOGIN)\n    def test_login(\n            self,\n            function_user: UserFixture,\n            public_users_client: PublicUsersClient,\n            authentication_client: AuthenticationClient\n    ):\n        request = LoginRequestSchema(email=function_user.email, password=function_user.password)\n        response = authentication_client.login_api(request)\n        response_data = LoginResponseSchema.model_validate_json(response.text)\n    \n        assert_status_code(response.status_code, HTTPStatus.OK)\n        assert_login_response(response_data)\n    \n>       validate_json_schema(response.json(), response_data.model_json_schema())\n\ntests/authentication/test_authentication.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ninstance = {'token': {'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA3LTE0VDE1OjUwOjE5LjU1NzMyNSIsIn...jkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.xe52Y0vE1_HvXPRyy_n6Mkx3PbVjlnr780DRNMgUNiw', 'tokenType': 'bearer'}}\nschema = {'$defs': {'TokenSchema': {'description': 'Описание структуры аутентификационных токенов.', 'properties': {'accessToke...труктуры ответа аутентификации.', 'properties': {'token': {'$ref': '#/$defs/TokenSchema'}}, 'required': ['token'], ...}\n\n    @allure.step(\"Validating JSON schema\")\n    def validate_json_schema(instance: Any, schema: dict) -> None:\n        \"\"\"\n        Проверяет, соответствует ли JSON-объект (instance) заданной JSON-схеме (schema).\n    \n        :param instance: JSON-данные, которые нужно проверить.\n        :param schema: Ожидаемая JSON-schema.\n        :raises jsonschema.exceptions.ValidationError: Если instance не соответствует schema.\n        \"\"\"\n        # Логируем факт начала валидации\n        logger.info(\"Validating JSON schema\")\n    \n        validate(\n            schema=schema,\n            instance=instance,\n>           format_checker=Draft202012Validator.FORMAT_CHECKER,\n                           ^^^^^^^^^^^^^^^^^^^^\n        )\nE       NameError: name 'Draft202012Validator' is not defined\n\ntools/assertions/schema.py:25: NameError"}, "steps": [{"name": "Authenticate user", "status": "passed", "steps": [{"name": "Make POST request to '/api/v1/authentication/login'", "status": "passed", "attachments": [{"name": "cURL command", "source": "e409ba21-29c7-4ec3-a5b1-14bc40f098ba-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/authentication/login'"}, {"name": "json", "value": "{'email': 'graykathryn@example.net', 'password': 'h4SNucOd#&'}"}, {"name": "data", "value": "None"}, {"name": "files", "value": "None"}], "start": 1752506419301, "stop": 1752506419562}], "parameters": [{"name": "request", "value": "LoginRequestSchema(email='graykathryn@example.net', password='h4SNucOd#&')"}], "start": 1752506419300, "stop": 1752506419562}, {"name": "Check that response status code equals to <HTTPStatus.OK: 200>", "status": "passed", "parameters": [{"name": "actual", "value": "200"}, {"name": "expected", "value": "<HTTPStatus.OK: 200>"}], "start": 1752506419562, "stop": 1752506419562}, {"name": "Check login response", "status": "passed", "steps": [{"name": "Check that 'token_type' equals to 'bearer'", "status": "passed", "parameters": [{"name": "actual", "value": "'bearer'"}, {"name": "expected", "value": "'bearer'"}, {"name": "name", "value": "'token_type'"}], "start": 1752506419562, "stop": 1752506419562}, {"name": "Check that 'access_token' is true", "status": "passed", "parameters": [{"name": "actual", "value": "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA3LTE0VDE1OjUwOjE5LjU1NzMyNSIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.MtDLUd1OsMReFjnv-eiXhflfTuCRVHE6LXUH_wbVfuA'"}, {"name": "name", "value": "'access_token'"}], "start": 1752506419562, "stop": 1752506419562}, {"name": "Check that 'refresh_token' is true", "status": "passed", "parameters": [{"name": "actual", "value": "'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA5LTEyVDE1OjIwOjE5LjU1OTQ2NiIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.xe52Y0vE1_HvXPRyy_n6Mkx3PbVjlnr780DRNMgUNiw'"}, {"name": "name", "value": "'refresh_token'"}], "start": 1752506419562, "stop": 1752506419562}], "parameters": [{"name": "response", "value": "LoginResponseSchema(token=TokenSchema(token_type='bearer', access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA3LTE0VDE1OjUwOjE5LjU1NzMyNSIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.MtDLUd1OsMReFjnv-eiXhflfTuCRVHE6LXUH_wbVfuA', refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA5LTEyVDE1OjIwOjE5LjU1OTQ2NiIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.xe52Y0vE1_HvXPRyy_n6Mkx3PbVjlnr780DRNMgUNiw'))"}], "start": 1752506419562, "stop": 1752506419562}, {"name": "Validating JSON schema", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined\n", "trace": "  File \"/Users/basmakovoleg/my-git-projects/autotests-api/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/basmakovoleg/my-git-projects/autotests-api/tools/assertions/schema.py\", line 25, in validate_json_schema\n    format_checker=Draft202012Validator.FORMAT_CHECKER,\n                   ^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "instance", "value": "{'token': {'tokenType': 'bearer', 'accessToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA3LTE0VDE1OjUwOjE5LjU1NzMyNSIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.MtDLUd1OsMReFjnv-eiXhflfTuCRVHE6LXUH_wbVfuA', 'refreshToken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOiIyMDI1LTA5LTEyVDE1OjIwOjE5LjU1OTQ2NiIsInVzZXJfaWQiOiI5ZjkyZWI4My0xOGUxLTRhMmEtYWY2Yy0xOGNiNDdmZTc2NWMifQ.xe52Y0vE1_HvXPRyy_n6Mkx3PbVjlnr780DRNMgUNiw'}}"}, {"name": "schema", "value": "{'$defs': {'TokenSchema': {'description': 'Описание структуры аутентификационных токенов.', 'properties': {'tokenType': {'title': 'Tokentype', 'type': 'string'}, 'accessToken': {'title': 'Accesstoken', 'type': 'string'}, 'refreshToken': {'title': 'Refreshtoken', 'type': 'string'}}, 'required': ['tokenType', 'accessToken', 'refreshToken'], 'title': 'TokenSchema', 'type': 'object'}}, 'description': 'Описание структуры ответа аутентификации.', 'properties': {'token': {'$ref': '#/$defs/TokenSchema'}}, 'required': ['token'], 'title': 'LoginResponseSchema', 'type': 'object'}"}], "start": 1752506419563, "stop": 1752506419563}], "attachments": [{"name": "log", "source": "15748dca-0107-427a-b944-7fc21a4283ca-attachment.txt", "type": "text/plain"}], "start": 1752506419300, "stop": 1752506419564, "uuid": "fce0e521-2e34-49ca-b6ab-fb3a3fca875a", "historyId": "b6b2aaa730ad45068d1fca8abf4a80e6", "testCaseId": "b6b2aaa730ad45068d1fca8abf4a80e6", "fullName": "tests.authentication.test_authentication.TestAuthentication#test_login", "labels": [{"name": "tag", "value": "REGRESSION"}, {"name": "tag", "value": "AUTHENTICATION"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "epic", "value": "LMS service"}, {"name": "suite", "value": "Authentication"}, {"name": "subSuite", "value": "Login"}, {"name": "feature", "value": "Authentication"}, {"name": "story", "value": "Login"}, {"name": "tag", "value": "authentication"}, {"name": "tag", "value": "regression"}, {"name": "host", "value": "MacBook-Pro-Tochka-2.local"}, {"name": "thread", "value": "20295-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.authentication.test_authentication"}]}