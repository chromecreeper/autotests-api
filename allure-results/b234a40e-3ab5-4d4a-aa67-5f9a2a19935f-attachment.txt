[32mINFO    [0m HTTP_CLIENT:event_hooks.py:28 Make POST request to http://localhost:8000/api/v1/users
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:38 Got response 200 OK from http://localhost:8000/api/v1/users
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:28 Make POST request to http://localhost:8000/api/v1/authentication/login
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:38 Got response 200 OK from http://localhost:8000/api/v1/authentication/login
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:28 Make POST request to http://localhost:8000/api/v1/files
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:38 Got response 200 OK from http://localhost:8000/api/v1/files
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:28 Make POST request to http://localhost:8000/api/v1/courses
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:38 Got response 200 OK from http://localhost:8000/api/v1/courses
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:28 Make GET request to http://localhost:8000/api/v1/courses?userId=2916afc3-704f-4d6b-92dc-5af33612c6a4
[32mINFO    [0m HTTP_CLIENT:event_hooks.py:38 Got response 200 OK from http://localhost:8000/api/v1/courses?userId=2916afc3-704f-4d6b-92dc-5af33612c6a4
[32mINFO    [0m BASE_ASSERTIONS:base.py:19 Check that response status code equals to 200
[32mINFO    [0m COURSES_ASSERTIONS:courses.py:89 Check get courses response
[32mINFO    [0m BASE_ASSERTIONS:base.py:74 Check that length of "courses" equals to 1
[32mINFO    [0m COURSES_ASSERTIONS:courses.py:64 Check course
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "id" equals to 7e052de0-6f7d-470b-a145-26f97f22fb31
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "title" equals to Every bad simply type bring various.
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "max_score" equals to 85
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "min_score" equals to 30
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "description" equals to Trial law ok join wish whose. Think cold at that phone.
Four wish reflect. Production especially century book usually heavy program. Heavy few work job say. Remain page tree billion address throw no.
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "estimated_time" equals to 8 weeks
[32mINFO    [0m FILES_ASSERTIONS:files.py:50 Check file
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "id" equals to 65ecbecd-e41f-4155-a01c-a7ccbc406fe4
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "url" equals to http://localhost:8000/static/tests/23057c7c-1e9d-4df5-b091-4840bd05cf90.png
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "filename" equals to 23057c7c-1e9d-4df5-b091-4840bd05cf90.png
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "directory" equals to tests
[32mINFO    [0m USERS_ASSERTIONS:users.py:20 Check user
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "id" equals to 2916afc3-704f-4d6b-92dc-5af33612c6a4
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "email" equals to martinpamela@example.net
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "last_name" equals to Gibson
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "first_name" equals to Alicia
[32mINFO    [0m BASE_ASSERTIONS:base.py:38 Check that "middle_name" equals to Dana
[32mINFO    [0m SCHEMA_ASSERTIONS:schema.py:20 Validating JSON schema