{"name": "Delete exercise", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined", "trace": "self = <tests.exercises.test_exercises.TestExercises object at 0x1075464d0>\nexercises_client = <clients.exercises.exercises_client.ExercisesClient object at 0x10784fa10>\nfunction_exercise = ExerciseFixture(request=CreateExerciseRequestSchema(title='Test either early cup kind poor collection.', course_id='aa... Say mother think set might contain senior. Move everything treatment final speech tough.', estimated_time='6 weeks')))\n\n    @allure.title(\"Delete exercise\")\n    @allure.story(AllureStory.DELETE_ENTITY)\n    @allure.sub_suite(AllureStory.DELETE_ENTITY)\n    def test_delete_exercise(self, exercises_client: ExercisesClient, function_exercise: ExerciseFixture):\n    \n        delete_response = exercises_client.delete_exercise_api(function_exercise.response.exercise.id)\n        assert_status_code(delete_response.status_code, HTTPStatus.OK)\n    \n        get_response = exercises_client.get_exercise_api(function_exercise.response.exercise.id)\n        get_response_data = InternalErrorResponseSchema.model_validate_json(get_response.text)\n    \n        assert_status_code(get_response.status_code, HTTPStatus.NOT_FOUND)\n        assert_exercise_not_found_response(get_response_data)\n    \n>       validate_json_schema(get_response.json(), get_response_data.model_json_schema())\n\ntests/exercises/test_exercises.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ninstance = {'detail': 'Exercise not found'}\nschema = {'description': 'Модель для описания внутренней ошибки.', 'properties': {'detail': {'title': 'Detail', 'type': 'string'}}, 'required': ['detail'], 'title': 'InternalErrorResponseSchema', ...}\n\n    @allure.step(\"Validating JSON schema\")\n    def validate_json_schema(instance: Any, schema: dict) -> None:\n        \"\"\"\n        Проверяет, соответствует ли JSON-объект (instance) заданной JSON-схеме (schema).\n    \n        :param instance: JSON-данные, которые нужно проверить.\n        :param schema: Ожидаемая JSON-schema.\n        :raises jsonschema.exceptions.ValidationError: Если instance не соответствует schema.\n        \"\"\"\n        # Логируем факт начала валидации\n        logger.info(\"Validating JSON schema\")\n    \n        validate(\n            schema=schema,\n            instance=instance,\n>           format_checker=Draft202012Validator.FORMAT_CHECKER,\n                           ^^^^^^^^^^^^^^^^^^^^\n        )\nE       NameError: name 'Draft202012Validator' is not defined\n\ntools/assertions/schema.py:25: NameError"}, "steps": [{"name": "Delete exercise", "status": "passed", "steps": [{"name": "Make DELETE request to '/api/v1/exercises/6379d9c3-006c-499a-b421-7e721d164c03'", "status": "passed", "attachments": [{"name": "cURL command", "source": "21a9c91e-3698-4949-99bb-abda1030db54-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/exercises/6379d9c3-006c-499a-b421-7e721d164c03'"}], "start": 1752506424625, "stop": 1752506424635}], "parameters": [{"name": "exercise_id", "value": "'6379d9c3-006c-499a-b421-7e721d164c03'"}], "start": 1752506424625, "stop": 1752506424635}, {"name": "Check that response status code equals to <HTTPStatus.OK: 200>", "status": "passed", "parameters": [{"name": "actual", "value": "200"}, {"name": "expected", "value": "<HTTPStatus.OK: 200>"}], "start": 1752506424635, "stop": 1752506424635}, {"name": "Get exercise", "status": "passed", "steps": [{"name": "Make GET request to '/api/v1/exercises/6379d9c3-006c-499a-b421-7e721d164c03'", "status": "passed", "attachments": [{"name": "cURL command", "source": "12fd4fc4-89d5-439f-afee-3347082bf416-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/exercises/6379d9c3-006c-499a-b421-7e721d164c03'"}, {"name": "params", "value": "None"}], "start": 1752506424635, "stop": 1752506424643}], "parameters": [{"name": "exercise_id", "value": "'6379d9c3-006c-499a-b421-7e721d164c03'"}], "start": 1752506424635, "stop": 1752506424643}, {"name": "Check that response status code equals to <HTTPStatus.NOT_FOUND: 404>", "status": "passed", "parameters": [{"name": "actual", "value": "404"}, {"name": "expected", "value": "<HTTPStatus.NOT_FOUND: 404>"}], "start": 1752506424643, "stop": 1752506424643}, {"name": "Check exercise not found response", "status": "passed", "steps": [{"name": "Check internal error response", "status": "passed", "steps": [{"name": "Check that 'details' equals to 'Exercise not found'", "status": "passed", "parameters": [{"name": "actual", "value": "'Exercise not found'"}, {"name": "expected", "value": "'Exercise not found'"}, {"name": "name", "value": "'details'"}], "start": 1752506424643, "stop": 1752506424643}], "parameters": [{"name": "actual", "value": "InternalErrorResponseSchema(details='Exercise not found')"}, {"name": "expected", "value": "InternalErrorResponseSchema(details='Exercise not found')"}], "start": 1752506424643, "stop": 1752506424643}], "parameters": [{"name": "actual", "value": "InternalErrorResponseSchema(details='Exercise not found')"}], "start": 1752506424643, "stop": 1752506424643}, {"name": "Validating JSON schema", "status": "broken", "statusDetails": {"message": "NameError: name 'Draft202012Validator' is not defined\n", "trace": "  File \"/Users/basmakovoleg/my-git-projects/autotests-api/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/basmakovoleg/my-git-projects/autotests-api/tools/assertions/schema.py\", line 25, in validate_json_schema\n    format_checker=Draft202012Validator.FORMAT_CHECKER,\n                   ^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "instance", "value": "{'detail': 'Exercise not found'}"}, {"name": "schema", "value": "{'description': 'Модель для описания внутренней ошибки.', 'properties': {'detail': {'title': 'Detail', 'type': 'string'}}, 'required': ['detail'], 'title': 'InternalErrorResponseSchema', 'type': 'object'}"}], "start": 1752506424643, "stop": 1752506424643}], "attachments": [{"name": "log", "source": "5d4680ef-4e77-498f-9e10-9a8de58e2784-attachment.txt", "type": "text/plain"}], "start": 1752506424625, "stop": 1752506424644, "uuid": "9fff442c-65d6-48e2-a4c1-0e6b2c0fc846", "historyId": "4a1e06ad18a3a9a05cfac0b37204f7f6", "testCaseId": "4a1e06ad18a3a9a05cfac0b37204f7f6", "fullName": "tests.exercises.test_exercises.TestExercises#test_delete_exercise", "labels": [{"name": "tag", "value": "EXERCISES"}, {"name": "tag", "value": "REGRESSION"}, {"name": "suite", "value": "Exercises"}, {"name": "story", "value": "Delete entity"}, {"name": "feature", "value": "Exercises"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "epic", "value": "LMS service"}, {"name": "subSuite", "value": "Delete entity"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "exercises"}, {"name": "host", "value": "MacBook-Pro-Tochka-2.local"}, {"name": "thread", "value": "20295-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.exercises.test_exercises"}]}